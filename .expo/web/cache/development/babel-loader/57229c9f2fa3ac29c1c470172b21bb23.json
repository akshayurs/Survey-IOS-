{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport * as Animatable from 'react-native-animatable';\nimport Logo from \"../components/Logo\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { BASE_URL } from \"../config\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SCREEN_WIDTH = _Dimensions$get.width,\n    SCREEN_HEIGHT = _Dimensions$get.height;\n\nvar scale = SCREEN_WIDTH / 320;\nexport function normalize(size) {\n  var newSize = size * scale;\n\n  if (Platform.OS === 'ios') {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize));\n  } else {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2;\n  }\n}\nexport default function ProfileSurvey3(_ref) {\n  var navigation = _ref.navigation;\n  console.log(\"Profile Survey 3\");\n  console.log(\"It is only for new User\");\n\n  var _useContext = useContext(AuthContext),\n      userInfo = _useContext.userInfo,\n      panelist_profiling_ans = _useContext.panelist_profiling_ans,\n      panelist_basic_details = _useContext.panelist_basic_details;\n\n  console.log(userInfo && userInfo);\n  console.log(panelist_basic_details && panelist_basic_details);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questions = _useState4[0],\n      setQuestions = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ques = _useState8[0],\n      setQues = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      ans = _useState10[0],\n      setAns = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ques_idx = _useState12[0],\n      setQues_idx = _useState12[1];\n\n  useEffect(function () {\n    setLoading(true);\n    axios.get(BASE_URL + \"/getCountryQuestion/\" + parseInt(panelist_basic_details && panelist_basic_details.Results.countryID) + \"/\" + parseInt(panelist_basic_details && panelist_basic_details.Results.panelistID)).then(function (res) {\n      var responce_data = res.data;\n      console.log(responce_data);\n      setData(Object.values(responce_data.Results));\n      setQues_idx(Object.keys(responce_data.Results));\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(\"register error \" + e);\n      setLoading(false);\n    });\n  }, [userInfo]);\n  console.log(ques);\n  var data_arr = null;\n\n  if (data && data) {\n    data_arr = data;\n  }\n\n  console.log(data_arr && data_arr);\n  var num_of_ques = null;\n\n  if (data_arr && data_arr) {\n    num_of_ques = data_arr.length;\n  }\n\n  console.log(num_of_ques);\n\n  var move_to_next = function move_to_next() {\n    var flag = false;\n\n    for (var i = 0; i < data_arr[ques].AnswerList.length; i++) {\n      if (data_arr[ques].AnswerList[i].is_answered == true) {\n        flag == true;\n      }\n    }\n\n    if (flag) {\n      setQues(ques + 1);\n      Animated.timing(progress, {\n        toValue: ques + 1,\n        duration: 1000,\n        useNativeDriver: false\n      }).start();\n    } else {\n      if (ques == num_of_ques - 1) {\n        var arr = ans;\n        navigation.navigate('End Of Profile Survey Screen');\n\n        for (var _i = 0; _i < arr.length; _i++) {\n          console.log(arr[_i].ques_id);\n        }\n\n        var final_ans = [];\n\n        for (var _i2 = 0; _i2 < data_arr.length; _i2++) {\n          if (data_arr[_i2].Question.question_type_id == 2) {\n            for (var j = 0; j < data_arr[_i2].AnswerList.length; j++) {\n              if (data_arr[_i2].AnswerList[j].is_answered) {\n                var obj = {\n                  ques_id: data_arr[_i2].AnswerList[j].profile_question_id,\n                  ans_id: data_arr[_i2].AnswerList[j].answer_code\n                };\n                final_ans.push(obj);\n                console.log(final_ans);\n                continue;\n              }\n            }\n          } else {\n            var temp_ans_str = \"\";\n            var ques_code = null;\n\n            for (var _j = 0; _j < data_arr[_i2].AnswerList.length; _j++) {\n              if (data_arr[_i2].AnswerList[_j].is_answered) {\n                temp_ans_str += data_arr[_i2].AnswerList[_j].answer_code + \",\";\n                ques_code = data_arr[_i2].AnswerList[_j].profile_question_id;\n              }\n            }\n\n            var _obj = void 0;\n\n            if (ques_code != null) {\n              _obj = {\n                ques_id: ques_code,\n                ans_id: temp_ans_str\n              };\n              final_ans.push(_obj);\n            }\n\n            console.log(final_ans);\n          }\n        }\n\n        console.log(final_ans);\n        AsyncStorage.setItem('ans_obj', JSON.stringify(final_ans));\n        panelist_profiling_ans(final_ans);\n        console.log(\"here\");\n        setAns([]);\n        navigation.navigate('End Of Profile Survey Screen');\n      } else {\n        setQues(ques + 1);\n      }\n    }\n\n    return flag;\n  };\n\n  console.log(ques);\n\n  var handle_option_press = function handle_option_press(ques_id, ans_id, ans_idx) {\n    console.log(\"Single select pressed\");\n    console.log(ans_id);\n    console.log(data_arr[ques].AnswerList[ans_idx]);\n\n    for (var i = 0; i < data_arr[ques].AnswerList.length; i++) {\n      if (data_arr[ques].AnswerList[i].is_answered == true && i != ans_idx) {\n        data_arr[ques].AnswerList[i].is_answered = false;\n        console.log(data_arr);\n      }\n    }\n\n    console.log(data_arr);\n\n    if (data_arr[ques].AnswerList[ans_idx].is_answered == true) {\n      data_arr[ques].AnswerList[ans_idx].is_answered = false;\n      setQues(ques);\n    }\n\n    data_arr[ques].AnswerList[ans_idx].is_answered = true;\n\n    for (var _i3 = 0; _i3 < data_arr[ques].AnswerList.length; _i3++) {\n      if (data_arr[ques].AnswerList[_i3].is_answered && _i3 != ans_idx) {\n        data_arr[ques].AnswerList[_i3].is_answered = false;\n      }\n    }\n\n    var flag = false;\n\n    for (var _i4 = 0; _i4 < data_arr[ques].AnswerList.length; _i4++) {\n      if (data_arr[ques].AnswerList[_i4].is_answered) {\n        flag = true;\n        break;\n      }\n    }\n\n    if (!flag) {\n      alert(\"Please select any options\");\n    } else {\n      console.log(\"here ans state is updated\");\n      var len = data_arr.length;\n      var temp_arr = ans;\n      var temp = true;\n\n      if (temp_arr.length == 0) {\n        var obj = {\n          ques_id: ques_id,\n          ans_id: ans_id\n        };\n        setQues(ques + 1);\n        setAns(temp_arr);\n        console.log(ans);\n      }\n\n      if (ques != num_of_ques - 1) {\n        var _obj2 = {\n          ques_id: ques_id,\n          ans_id: ans_id\n        };\n        setQues(ques + 1);\n        setAns([].concat(_toConsumableArray(ans), [_obj2]));\n        console.log(ques);\n      }\n\n      if (ques == num_of_ques - 1) {\n        var _obj3 = {\n          ques_id: ques_id,\n          ans_id: ans_id\n        };\n        setAns([].concat(_toConsumableArray(ans), [_obj3]));\n        var arr = ans;\n        navigation.navigate('End Of Profile Survey Screen');\n\n        for (var _i5 = 0; _i5 < arr.length; _i5++) {\n          console.log(arr[_i5].ques_id);\n        }\n\n        var final_ans = [];\n\n        for (var _i6 = 0; _i6 < data_arr.length; _i6++) {\n          if (data_arr[_i6].Question.question_type_id == 2) {\n            for (var j = 0; j < data_arr[_i6].AnswerList.length; j++) {\n              if (data_arr[_i6].AnswerList[j].is_answered) {\n                var _obj4 = {\n                  ques_id: data_arr[_i6].AnswerList[j].profile_question_id,\n                  ans_id: data_arr[_i6].AnswerList[j].answer_code\n                };\n                final_ans.push(_obj4);\n                console.log(final_ans);\n                continue;\n              }\n            }\n          } else {\n            var temp_ans_str = \"\";\n            var ques_code = null;\n\n            for (var _j2 = 0; _j2 < data_arr[_i6].AnswerList.length; _j2++) {\n              if (data_arr[_i6].AnswerList[_j2].is_answered) {\n                temp_ans_str += data_arr[_i6].AnswerList[_j2].answer_code + \",\";\n                ques_code = data_arr[_i6].AnswerList[_j2].profile_question_id;\n              }\n            }\n\n            var _obj5 = {\n              ques_id: ques_code,\n              ans_id: temp_ans_str\n            };\n            final_ans.push(_obj5);\n            console.log(final_ans);\n          }\n        }\n\n        console.log(final_ans);\n        AsyncStorage.setItem('ans_obj', JSON.stringify(final_ans));\n        panelist_profiling_ans(final_ans);\n        console.log(\"here\");\n        setAns([]);\n        navigation.navigate('End Of Profile Survey Screen');\n      }\n\n      Animated.timing(progress, {\n        toValue: ques + 1,\n        duration: 1000,\n        useNativeDriver: false\n      }).start();\n    }\n  };\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      multi_ans = _useState14[0],\n      setMulti_ans = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isSelected = _useState16[0],\n      setIsSelected = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      toggle = _useState18[0],\n      setToggle = _useState18[1];\n\n  var ans_selected = [];\n\n  var handle_multiple_select = function handle_multiple_select(ques_id, ans_id, ans_idx) {\n    console.log(ques);\n    console.log(ans_idx);\n\n    if (data_arr[ques].AnswerList[ans_idx].is_answered == true) {\n      console.log(data_arr[ques].AnswerList[ans_idx]);\n      data_arr[ques].AnswerList[ans_idx].is_answered = false;\n      console.log(data_arr[ques].AnswerList[ans_idx]);\n      setToggle(!toggle);\n    } else {\n      console.log(data_arr[ques].AnswerList[ans_idx]);\n      data_arr[ques].AnswerList[ans_idx].is_answered = true;\n      console.log(ans_selected);\n      console.log(data_arr);\n      var temp_arr = isSelected;\n      var flag = true;\n\n      if (flag) {\n        setIsSelected([].concat(_toConsumableArray(isSelected), [ans_id]));\n        setMulti_ans(multi_ans + ans_id + \",\");\n        console.log(multi_ans);\n        console.log(isSelected);\n      }\n    }\n  };\n\n  var next_question = function next_question(ques_id) {\n    var temp = ans;\n    var flag = true;\n\n    for (var i = 0; i < temp.length; i++) {\n      if (temp[i].ques_id == ques_id) {\n        flag == false;\n      }\n    }\n\n    if (flag) {\n      var obj = {\n        ques_id: ques_idx[ques_id],\n        ans_id: multi_ans\n      };\n      ans_selected = [];\n      setIsSelected([]);\n      setMulti_ans(\"\");\n      setAns([].concat(_toConsumableArray(ans), [obj]));\n      setQues(ques + 1);\n      Animated.timing(progress, {\n        toValue: ques + 1,\n        duration: 1000,\n        useNativeDriver: false\n      }).start();\n    }\n  };\n\n  var back_question = function back_question() {\n    if (ques != 0) {\n      setQues(ques - 1);\n    }\n  };\n\n  console.log(data_arr && data_arr.length);\n\n  var _useState19 = useState(new Animated.Value(0)),\n      _useState20 = _slicedToArray(_useState19, 2),\n      progress = _useState20[0],\n      setProgress = _useState20[1];\n\n  var progressAnim = progress.interpolate({\n    inputRange: [0, data_arr && data_arr.length],\n    outputRange: ['0%', '100%']\n  });\n  console.log(progress);\n\n  var renderProgressBar = function renderProgressBar() {\n    return _jsx(View, {\n      style: {\n        width: '100%',\n        height: 20,\n        borderRadius: 20,\n        backgroundColor: '#000000'\n      },\n      children: _jsx(Animated.View, {\n        style: [{\n          height: 20,\n          borderRadius: 20,\n          backgroundColor: \"#378C3C\"\n        }, {\n          width: progressAnim\n        }]\n      })\n    });\n  };\n\n  console.log(ans);\n\n  var handleShowResult = function handleShowResult() {\n    var arr = ans;\n\n    for (var i = 0; i < arr.length; i++) {\n      console.log(arr[i].ques_id);\n    }\n\n    var final_ans = [];\n\n    for (var _i7 = 0; _i7 < arr.length; _i7++) {\n      for (var j = _i7 + 1; j < arr.length; j++) {\n        if (arr[_i7].ques_id == arr[j].ques_id) {\n          console.log(\"HITTTTTTTTT\");\n          arr[_i7] = null;\n        }\n      }\n    }\n\n    console.log(arr);\n    var counter = 0;\n\n    for (var _i8 = 0; _i8 < arr.length; _i8++) {\n      if (arr[_i8] != null) {\n        final_ans[counter] = arr[_i8];\n        counter++;\n      }\n    }\n\n    arr = [];\n    console.log(final_ans);\n    AsyncStorage.setItem('ans_obj', JSON.stringify(final_ans));\n    panelist_profiling_ans(final_ans);\n    console.log(\"here\");\n    setAns([]);\n    navigation.navigate('End Of Profile Survey Screen');\n  };\n\n  if (data_arr == null) {\n    return _jsx(Text, {});\n  } else {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsxs(Animatable.View, {\n        animation: \"fadeInUpBig\",\n        style: [styles.footer, {\n          backgroundColor: \"rgb(235 235 235)\"\n        }],\n        children: [renderProgressBar(), data_arr[ques] && data_arr[ques].Question ? _jsx(_Fragment, {\n          children: _jsx(Text, {\n            style: {\n              color: '#000000',\n              marginTop: 10,\n              fontSize: normalize(16),\n              fontWeight: 'bold'\n            },\n            children: data_arr[ques].Question.question_title\n          })\n        }) : _jsx(View, {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100%'\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 32,\n              fontWeight: '700'\n            },\n            children: \"LOADING...\"\n          })\n        }), data_arr && data_arr[ques] && data_arr[ques].Question.question_type_id == 3 ? _jsx(Text, {\n          style: {\n            marginTop: 10,\n            fontSize: normalize(16),\n            color: '#00a4de',\n            fontStyle: 'italic'\n          },\n          children: \"Please select all that apply\"\n        }) : _jsx(Text, {\n          style: {\n            marginTop: 10,\n            fontSize: normalize(16),\n            color: '#00a4de',\n            fontStyle: 'italic'\n          },\n          children: \"Please select any one\"\n        }), data_arr && data_arr[ques] && data_arr[ques].AnswerList ? _jsx(ScrollView, {\n          showsVerticalScrollIndicator: false,\n          showsHorizontalScrollIndicator: false,\n          children: data_arr[ques].AnswerList.map(function (ele, val) {\n            if (data_arr[ques].Question.question_type_id == 2) {\n              return _jsx(View, {\n                children: _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return handle_option_press(ele.profile_question_id, ele.answer_code, val);\n                  },\n                  children: _jsx(View, {\n                    style: [styles.action, {\n                      backgroundColor: ele.is_answered ? '#378C3C' : '#ffffff'\n                    }],\n                    children: _jsx(Text, {\n                      style: {\n                        fontSize: normalize(15),\n                        color: ele.is_answered ? '#ffffff' : '#000000'\n                      },\n                      children: ele.description\n                    })\n                  })\n                }, ele.answer_code)\n              }, val);\n            } else {\n              console.log(data_arr[ques].AnswerList[val]);\n              return _jsx(View, {\n                children: _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    handle_multiple_select(ele.profile_question_id, ele.answer_code, val);\n                  },\n                  children: _jsx(View, {\n                    style: [styles.action, {\n                      backgroundColor: ele.is_answered ? '#378C3C' : '#ffffff'\n                    }],\n                    children: _jsx(Text, {\n                      style: {\n                        fontSize: normalize(15),\n                        color: ele.is_answered ? '#ffffff' : '#000000'\n                      },\n                      children: ele.description\n                    })\n                  })\n                }, ele.answer_code)\n              }, val);\n            }\n          })\n        }) : _jsx(Text, {\n          children: \"Loading\"\n        }), ques == 0 ? _jsx(_Fragment, {}) : data_arr && data_arr[ques] && data_arr[ques].Question.question_type_id == 2 ? _jsxs(View, {\n          style: [styles.button, {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: \"center\"\n          }],\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.signIn, {\n              backgroundColor: '#8C6E63',\n              borderRadius: 40,\n              marginRight: 10\n            }],\n            onPress: function onPress() {\n              return back_question();\n            },\n            children: _jsx(Text, {\n              style: [styles.textSign, {\n                color: '#fff'\n              }],\n              children: \"Back\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.signIn, {\n              backgroundColor: '#378C3C',\n              borderRadius: 40,\n              marginLeft: 10\n            }],\n            onPress: function onPress() {\n              var ret = move_to_next();\n            },\n            children: _jsx(Text, {\n              style: [styles.textSign, {\n                color: '#fff'\n              }],\n              children: \"Next\"\n            })\n          })]\n        }) : _jsxs(View, {\n          style: [styles.button, {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: \"center\"\n          }],\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.signIn, {\n              backgroundColor: '#8C6E63',\n              borderRadius: 40,\n              marginRight: 10\n            }],\n            onPress: function onPress() {\n              return back_question();\n            },\n            children: _jsx(Text, {\n              style: [styles.textSign, {\n                color: '#fff'\n              }],\n              children: \"Back\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.signIn, {\n              backgroundColor: '#378C3C',\n              borderRadius: 40,\n              marginLeft: 10\n            }],\n            onPress: function onPress() {\n              return next_question(ques);\n            },\n            children: _jsx(Text, {\n              style: [styles.textSign, {\n                color: '#fff'\n              }],\n              children: \"Next\"\n            })\n          })]\n        })]\n      })\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FAFAFA',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: SCREEN_WIDTH,\n    height: SCREEN_HEIGHT,\n    marginTop: 20\n  },\n  stretch: {\n    width: SCREEN_WIDTH > SCREEN_HEIGHT ? SCREEN_HEIGHT * 0.4 : SCREEN_WIDTH * 0.4,\n    textAlign: 'center',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  header: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    paddingHorizontal: 20,\n    paddingBottom: 50\n  },\n  footer: {\n    flex: 1,\n    backgroundColor: 'rgb(235 235 235)',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingHorizontal: 20,\n    paddingVertical: 30,\n    paddingBottom: 80\n  },\n  text_header: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  text_footer: {\n    color: '#05375a',\n    fontSize: 18\n  },\n  action: {\n    padding: normalize(6),\n    marginTop: normalize(10),\n    minHeight: normalize(40),\n    maxHeight: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderRadius: normalize(10),\n    borderWidth: 1,\n    borderColor: \"#8d8d8d\"\n  },\n  actionError: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomColor: '#FF0000',\n    paddingBottom: 5\n  },\n  textInput: {\n    height: normalize(20),\n    flex: 1,\n    paddingLeft: 10,\n    color: '#05375a'\n  },\n  errorMsg: {\n    color: '#FF0000',\n    fontSize: 14\n  },\n  button: {\n    position: 'absolute',\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'flex-end',\n    bottom: SCREEN_WIDTH * 0.03,\n    width: SCREEN_WIDTH * 0.3,\n    marginLeft: SCREEN_WIDTH * 0.35,\n    marginRight: SCREEN_WIDTH * 0.35\n  },\n  signIn: {\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    borderRadius: 10\n  },\n  textSign: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","Animatable","Logo","AuthContext","BASE_URL","axios","AsyncStorage","Dimensions","get","SCREEN_WIDTH","width","SCREEN_HEIGHT","height","scale","normalize","size","newSize","Platform","OS","Math","round","PixelRatio","roundToNearestPixel","ProfileSurvey3","navigation","console","log","userInfo","panelist_profiling_ans","panelist_basic_details","loading","setLoading","questions","setQuestions","data","setData","ques","setQues","ans","setAns","ques_idx","setQues_idx","parseInt","Results","countryID","panelistID","then","res","responce_data","Object","values","keys","catch","e","data_arr","num_of_ques","length","move_to_next","flag","i","AnswerList","is_answered","Animated","timing","progress","toValue","duration","useNativeDriver","start","arr","navigate","ques_id","final_ans","Question","question_type_id","j","obj","profile_question_id","ans_id","answer_code","push","temp_ans_str","ques_code","setItem","JSON","stringify","handle_option_press","ans_idx","alert","len","temp_arr","temp","multi_ans","setMulti_ans","isSelected","setIsSelected","toggle","setToggle","ans_selected","handle_multiple_select","next_question","back_question","Value","setProgress","progressAnim","interpolate","inputRange","outputRange","renderProgressBar","borderRadius","backgroundColor","handleShowResult","counter","styles","container","footer","color","marginTop","fontSize","fontWeight","question_title","display","justifyContent","alignItems","fontStyle","map","ele","val","action","description","button","flexDirection","signIn","marginRight","textSign","marginLeft","ret","StyleSheet","create","flex","stretch","textAlign","header","paddingHorizontal","paddingBottom","borderTopLeftRadius","borderTopRightRadius","paddingVertical","text_header","text_footer","padding","minHeight","maxHeight","borderWidth","borderColor","actionError","borderBottomColor","textInput","paddingLeft","errorMsg","position","bottom","alignSelf"],"sources":["C:/Users/dives/Downloads/Survey Optimus - Latest Code 240822 (1)/screen/ProfileSurvey3.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TouchableOpacity,\n    Dimensions,\n    Platform, \n    PixelRatio,\n    ScrollView,\n    Animated,\n} from \"react-native\";\nimport * as Animatable from 'react-native-animatable';\nimport Logo from \"../components/Logo\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { BASE_URL } from \"../config\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar {width: SCREEN_WIDTH, height: SCREEN_HEIGHT,} = Dimensions.get('window');\nconst scale = SCREEN_WIDTH / 320;\nexport function normalize(size) {\n    const newSize = size * scale \n    if (Platform.OS === 'ios') {\n      return Math.round(PixelRatio.roundToNearestPixel(newSize))\n    } else {\n      return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2\n    }\n}\n\nexport default function ProfileSurvey3({navigation}) {\n    console.log(\"Profile Survey 3\")\n    console.log(\"It is only for new User\")\n    const {userInfo, panelist_profiling_ans, panelist_basic_details} = useContext(AuthContext);\n\n    console.log(userInfo && userInfo)\n    console.log(panelist_basic_details && panelist_basic_details)\n\n    const [loading, setLoading] = useState(false)\n    const [questions, setQuestions] = useState([])\n    const [data, setData] = useState(null)\n    const [ques, setQues] = useState(0);\n    const [ans, setAns] = useState([])\n    const [ques_idx, setQues_idx] = useState(null)\n    useEffect(() => {\n        setLoading(true)\n        // console.log(userInfo && userInfo.Result.countryID)\n        // console.log(userInfo && userInfo.Result.panelistID)\n        axios\n        .get(`${BASE_URL}/getCountryQuestion/${parseInt(panelist_basic_details && panelist_basic_details.Results.countryID)}/${parseInt(panelist_basic_details && panelist_basic_details.Results.panelistID)}`)\n        .then(res => {\n            let responce_data = res.data;\n            console.log(responce_data)\n            setData(Object.values(responce_data.Results))\n            setQues_idx(Object.keys(responce_data.Results))\n            \n            setLoading(false);\n        })\n        .catch(e => {\n        console.log(`register error ${e}`);\n        setLoading(false);\n        });\n  \n    }, [userInfo]);\n    console.log(ques)\n\n    let data_arr = null\n    if(data && data) {\n        data_arr = data\n        // if(userInfo.Result.answerList.length > 0){\n        //     for(let i=0;i<userInfo.Result.answerList.length;i++){\n        //         let obj = userInfo.Result.answerList[i]\n        //         let ques_id_ = obj.ques_id\n        //         let ans_id_ = obj.ans_id\n        //         let ans_id_arr = ans_id_.split(',')\n        //         for(let j=0;j<data_arr.length;j++){\n        //             if(data_arr[j].AnswerList[0].profile_question_id == ques_id_){\n        //                 for(let k=0;k<data_arr[j].AnswerList.length;k++){\n        //                     for(let x=0;x<ans_id_arr.length;x++){\n        //                         if(data_arr[j].AnswerList[k].answer_code == ans_id_arr[x]){\n        //                             data_arr[j].AnswerList[k].is_answered = true\n        //                             console.log(\"HIiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\")\n        //                             setData([...data, data[j].AnswerList[k].is_answered = true])\n        //                         }\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        // }\n    }\n\n    \n    \n    console.log(data_arr && data_arr)\n    let num_of_ques = null;\n    if(data_arr && data_arr){\n        num_of_ques = data_arr.length\n    }\n    console.log(num_of_ques)\n\n    const move_to_next = () => {\n        let flag = false\n        for(let i=0;i<data_arr[ques].AnswerList.length;i++){\n            if(data_arr[ques].AnswerList[i].is_answered == true){\n                flag == true\n            }\n        }\n        if(flag){\n            setQues(ques+1)\n            Animated.timing(progress, {\n                toValue: ques+1,\n                duration: 1000,\n                useNativeDriver: false\n            }).start();\n        }\n        else{\n            // alert(\"Please select option to continue\")\n            if(ques == (num_of_ques-1)){\n                // let obj = {\n                //     ques_id: ques_id,\n                //     ans_id: ans_id\n                // }\n                // setAns([...ans, obj]);\n\n                // AsyncStorage.setItem('answers', JSON.stringify(ans));\n                // handleShowResult()\n                // console.log(\"size equal\")\n                let arr = ans;\n                navigation.navigate('End Of Profile Survey Screen')\n            for(let i=0;i<arr.length;i++){\n                console.log(arr[i].ques_id)\n            }\n            let final_ans = []\n\n            for(let i=0;i<data_arr.length;i++){\n                if(data_arr[i].Question.question_type_id == 2){\n                    for(let j=0;j<data_arr[i].AnswerList.length;j++){\n                        if(data_arr[i].AnswerList[j].is_answered){\n                            let obj = {\n                                ques_id: data_arr[i].AnswerList[j].profile_question_id,\n                                ans_id: data_arr[i].AnswerList[j].answer_code\n                            }\n                            final_ans.push(obj)\n                            console.log(final_ans)\n                            continue;\n                        }\n                    \n                    }\n                }else{\n                    let temp_ans_str = \"\"\n                    let ques_code = null\n                    for(let j=0;j<data_arr[i].AnswerList.length;j++){\n                        if(data_arr[i].AnswerList[j].is_answered){\n                            temp_ans_str += data_arr[i].AnswerList[j].answer_code+\",\"\n                            ques_code = data_arr[i].AnswerList[j].profile_question_id\n                        }\n                    }\n                    let obj \n                    if(ques_code != null){\n                    obj = {\n                        ques_id: ques_code,\n                        ans_id: temp_ans_str\n                    }\n                    final_ans.push(obj)\n                    }\n                    console.log(final_ans)\n                }\n            }\n\n            //old selection of answers\n            // for(let i=0;i<arr.length;i++){\n            //     for(let j=i+1;j<arr.length-1;j++){\n            //         console.log(i)\n            //         console.log(arr[i])\n            //         console.log(j)\n            //         console.log(arr[j])\n            //         if(arr[i].ques_id == arr[j].ques_id){\n            //             console.log(\"HITTTTTTTTT\")\n            //             arr[i] = null;\n            //         }\n            //     }\n            // }\n            // console.log(arr)\n            // let counter = 0;\n            // for(let i=0;i<arr.length;i++){\n            //     if(arr[i]!=null){\n            //         final_ans[counter] = arr[i]\n            //         counter++;\n            //     }\n            // }\n            // arr = []\n                console.log(final_ans)\n                AsyncStorage.setItem('ans_obj', JSON.stringify(final_ans));\n                // console.log(ans_obj)\n                panelist_profiling_ans(final_ans)\n                console.log(\"here\")\n                setAns([])\n                navigation.navigate('End Of Profile Survey Screen')\n        \n                }\n                else{\n            setQues(ques+1)\n                }\n        }\n        return flag;\n    }\n\n    console.log(ques)\n    //while going back he have two options whether to keep that answer or to change the current answer\n    //if the user chooses the current answer ones again then it might happen in other case that we looses the responce of that question\n    //so which one to take\n\n    const handle_option_press=(ques_id, ans_id, ans_idx)=>{\n        console.log(\"Single select pressed\");\n        console.log(ans_id)\n        console.log(data_arr[ques].AnswerList[ans_idx])\n        // for(let i=0;i<data_arr[ques].AnswerList.length;i++){\n        //     if(data_arr[ques].AnswerList[ans_idx].is_answered == true && i != ans_idx){\n        //         data_arr[ques].AnswerList[ans_idx].is_answered = false\n        //         console.log(data_arr)\n        //     }\n        // }\n        // this will deactivate the current question if answered and load the current question again\n        for(let i=0;i<data_arr[ques].AnswerList.length;i++){\n            if(data_arr[ques].AnswerList[i].is_answered == true && i != ans_idx){\n                data_arr[ques].AnswerList[i].is_answered = false\n                console.log(data_arr)\n            }\n        }\n            console.log(data_arr)\n            if(data_arr[ques].AnswerList[ans_idx].is_answered == true){\n                data_arr[ques].AnswerList[ans_idx].is_answered = false\n                setQues(ques)\n            }\n            data_arr[ques].AnswerList[ans_idx].is_answered = true;\n            \n            //make every option false except answer one\n            for(let i=0;i<data_arr[ques].AnswerList.length;i++){\n                if(data_arr[ques].AnswerList[i].is_answered &&  i != ans_idx){\n                    data_arr[ques].AnswerList[i].is_answered = false\n                }\n            }\n            // if user has not selected any options in current question state\n            let flag = false;\n            for(let i=0;i<data_arr[ques].AnswerList.length;i++){\n                if(data_arr[ques].AnswerList[i].is_answered){\n                    flag = true;\n                    break;\n                }\n            }\n            if(!flag){\n                alert(\"Please select any options\")\n            }\n            else{\n            console.log(\"here ans state is updated\")\n            let len = data_arr.length\n            let temp_arr = ans;\n            let temp = true;\n            //checking whether the ans state already contains the present ques_id or not\n            // for(let i=0;i<temp_arr.length;i++){\n            //     if(temp_arr[i].ques_id == ques_id){\n            //         let obj = {\n            //             ques_id: ques_id,\n            //             ans_id: ans_id\n            //         }\n            //         setQues(ques+1)\n            //         setAns([...ans, obj]);\n            //         if(ques == (len-1)){\n            //             // AsyncStorage.setItem('answers', JSON.stringify(ans));\n            //             console.log(\"size equal\")\n            //             handleShowResult()\n            //         }            \n            //     }\n            // }\n            \n\n            if(temp_arr.length == 0){\n                let obj = {\n                    ques_id: ques_id,\n                    ans_id: ans_id\n                }\n                setQues(ques+1)\n                setAns(temp_arr);\n                console.log(ans)\n            }\n            if(ques != (num_of_ques-1)){\n                let obj = {\n                    ques_id: ques_id,\n                    ans_id: ans_id\n                }\n                setQues(ques+1)\n                setAns([...ans, obj]);\n                console.log(ques)\n            }\n            if(ques == (num_of_ques-1)){\n                let obj = {\n                    ques_id: ques_id,\n                    ans_id: ans_id\n                }\n                setAns([...ans, obj]);\n\n                // AsyncStorage.setItem('answers', JSON.stringify(ans));\n                // handleShowResult()\n                // console.log(\"size equal\")\n                let arr = ans;\n                navigation.navigate('End Of Profile Survey Screen')\n            for(let i=0;i<arr.length;i++){\n                console.log(arr[i].ques_id)\n            }\n            let final_ans = []\n\n            for(let i=0;i<data_arr.length;i++){\n                if(data_arr[i].Question.question_type_id == 2){\n                    for(let j=0;j<data_arr[i].AnswerList.length;j++){\n                        if(data_arr[i].AnswerList[j].is_answered){\n                            let obj = {\n                                ques_id: data_arr[i].AnswerList[j].profile_question_id,\n                                ans_id: data_arr[i].AnswerList[j].answer_code\n                            }\n                            final_ans.push(obj)\n                            console.log(final_ans)\n                            continue;\n                        }\n                    \n                    }\n                }else{\n                    let temp_ans_str = \"\"\n                    let ques_code = null\n                    for(let j=0;j<data_arr[i].AnswerList.length;j++){\n                        if(data_arr[i].AnswerList[j].is_answered){\n                            temp_ans_str += data_arr[i].AnswerList[j].answer_code+\",\"\n                            ques_code = data_arr[i].AnswerList[j].profile_question_id\n                        }\n                    }\n                    let obj = {\n                        ques_id: ques_code,\n                        ans_id: temp_ans_str\n                    }\n                    final_ans.push(obj)\n                    console.log(final_ans)\n                }\n            }\n\n            //old selection of answers\n            // for(let i=0;i<arr.length;i++){\n            //     for(let j=i+1;j<arr.length-1;j++){\n            //         console.log(i)\n            //         console.log(arr[i])\n            //         console.log(j)\n            //         console.log(arr[j])\n            //         if(arr[i].ques_id == arr[j].ques_id){\n            //             console.log(\"HITTTTTTTTT\")\n            //             arr[i] = null;\n            //         }\n            //     }\n            // }\n            // console.log(arr)\n            // let counter = 0;\n            // for(let i=0;i<arr.length;i++){\n            //     if(arr[i]!=null){\n            //         final_ans[counter] = arr[i]\n            //         counter++;\n            //     }\n            // }\n            // arr = []\n            console.log(final_ans)\n            AsyncStorage.setItem('ans_obj', JSON.stringify(final_ans));\n            // console.log(ans_obj)\n            panelist_profiling_ans(final_ans)\n            console.log(\"here\")\n            setAns([])\n            navigation.navigate('End Of Profile Survey Screen')\n        \n                }\n                \n\n                Animated.timing(progress, {\n                    toValue: ques+1,\n                    duration: 1000,\n                    useNativeDriver: false\n                }).start();   \n\n                //if answer is already selected\n                // if(temp){\n                //     console.log(\"I am ifdsafasfsafdsafsaf\")\n                //     data_arr[ques].AnswerList[ans_idx].is_answered = true\n                //     console.log(len)\n                //     console.log(ques)\n                //     let obj = {\n                //         ques_id: ques_id,\n                //         ans_id: ans_id\n                //     }\n                //     setQues(ques+1)\n                //     setAns([...ans, obj]);\n                //     if(ques == (len-1)){\n                //         // AsyncStorage.setItem('answers', JSON.stringify(ans));\n                //         handleShowResult()\n                //         console.log(\"size equal\")\n                //     }\n                //     Animated.timing(progress, {\n                //         toValue: ques+1,\n                //         duration: 1000,\n                //         useNativeDriver: false\n                //     }).start();          \n                // }\n    }\n    }\n    \n    const [multi_ans, setMulti_ans] = useState(\"\");\n    const [isSelected, setIsSelected] = useState([])\n    const [toggle, setToggle] = useState(false)\n    let ans_selected = []\n    const handle_multiple_select = (ques_id, ans_id, ans_idx) => {\n        console.log(ques) \n        console.log(ans_idx) \n        if(data_arr[ques].AnswerList[ans_idx].is_answered == true){\n            console.log(data_arr[ques].AnswerList[ans_idx])\n            data_arr[ques].AnswerList[ans_idx].is_answered = false\n            console.log(data_arr[ques].AnswerList[ans_idx])\n            setToggle(!toggle)\n        }\n        else{\n        // ans_selected.push(ans_id)\n        console.log(data_arr[ques].AnswerList[ans_idx])\n        data_arr[ques].AnswerList[ans_idx].is_answered = true\n        console.log(ans_selected)\n        console.log(data_arr)\n        let temp_arr = isSelected\n        let flag = true;\n        //here I am putting ans ID\n        // for(let i=0;i<temp_arr.length;i++){\n        //     if(temp_arr[i] == ans_id){\n        //         console.log(\"I am here\")\n        //         data_arr[ques].AnswerList[ans_idx].is_answered = false\n        //         flag = false;\n        //     }\n        // }\n        if(flag){\n            setIsSelected([...isSelected, ans_id])\n            setMulti_ans(multi_ans+ans_id+\",\")\n            console.log(multi_ans)\n            console.log(isSelected)\n        }\n        }\n    }\n\n    const next_question = (ques_id) => {\n        let temp = ans\n        let flag = true\n        for(let i=0;i<temp.length;i++){\n            if(temp[i].ques_id == ques_id){\n                flag == false\n            }\n        }\n\n        if(flag){\n            let obj = {\n                ques_id: ques_idx[ques_id],\n                ans_id: multi_ans\n            }\n            ans_selected = []\n            setIsSelected([])\n            setMulti_ans(\"\")\n            setAns([...ans, obj]);\n            setQues(ques+1)\n            Animated.timing(progress, {\n                toValue: ques+1,\n                duration: 1000,\n                useNativeDriver: false\n            }).start();\n        }\n    }\n\n    const back_question = () => {\n        if(ques != 0){\n            setQues(ques-1)\n        }\n    }\n    console.log(data_arr&&data_arr.length)\n    const [progress, setProgress] = useState(new Animated.Value(0));\n    const progressAnim = progress.interpolate({\n        inputRange: [0, data_arr&&data_arr.length],\n        outputRange: ['0%','100%']\n    })\n    console.log(progress)\n    const renderProgressBar = () => {\n        return (\n            <View style={{\n                width: '100%',\n                height: 20,\n                borderRadius: 20,\n                backgroundColor: '#000000',\n\n            }}>\n                <Animated.View style={[{\n                    height: 20,\n                    borderRadius: 20,\n                    backgroundColor: \"#378C3C\"\n                },{\n                    width: progressAnim\n                }]}>\n\n                </Animated.View>\n\n            </View>\n        )\n    }\n    console.log(ans)\n    const handleShowResult=()=>{\n        // let arr = ques_idx;\n        // let ans_obj = []\n        // for(let i=0;i<arr.length;i++){\n        //     for(let j=0;j<data_arr[i].AnswerList.length;j++){\n        //         let flag = false;\n        //         let str = \"\"\n        //         if(data_arr[i].AnswerList[j].is_answered == true && data[ques].Question.question_type_id == 2){\n        //             flag = true\n        //             let temp = {\n        //                 key:`${arr[i]}`,\n        //                 value: `${data_arr[i].AnswerList[j].answer_code}`\n        //             };\n        //             ans_obj.push(temp)\n        //             continue\n        //         }\n        //         else if(data_arr[i].AnswerList[j].is_answered == true && data[ques].Question.question_type_id == 3){\n        //             str += data_arr[i].AnswerList[j].answer_code+\",\";\n        //         }\n                \n        //         if(flag == false){\n        //             let temp = {\n        //                 key:`${arr[i]}`,\n        //                 value: `${str}`\n        //             };\n        //             ans_obj.push(temp)\n        //         }\n        //     }   \n        // }\n        \n        let arr = ans;\n        for(let i=0;i<arr.length;i++){\n            console.log(arr[i].ques_id)\n        }\n        let final_ans = []\n        for(let i=0;i<arr.length;i++){\n            for(let j=i+1;j<arr.length;j++){\n                if(arr[i].ques_id == arr[j].ques_id){\n                    console.log(\"HITTTTTTTTT\")\n                    arr[i] = null;\n                }\n            }\n        }\n        console.log(arr)\n        let counter = 0;\n        for(let i=0;i<arr.length;i++){\n            if(arr[i]!=null){\n                final_ans[counter] = arr[i]\n                counter++;\n            }\n        }\n        arr = []\n        console.log(final_ans)\n        AsyncStorage.setItem('ans_obj', JSON.stringify(final_ans));\n        // console.log(ans_obj)\n        panelist_profiling_ans(final_ans)\n        console.log(\"here\")\n        setAns([])\n        navigation.navigate('End Of Profile Survey Screen')\n    }\n    if(data_arr == null){\n        return (\n            <Text></Text>\n        )\n    }\n    else{\n        return (        \n        <View style={styles.container}>\n        <Animatable.View \n            animation=\"fadeInUpBig\"\n            style={[styles.footer, {\n                backgroundColor: \"rgb(235 235 235)\"\n            }]}\n        >\n            { renderProgressBar() }\n            {\n                data_arr[ques] && data_arr[ques].Question ?\n                <>\n                    <Text style={{color: '#000000', marginTop:10,  fontSize:normalize(16), fontWeight: 'bold'}}>{data_arr[ques].Question.question_title}</Text> \n                </>  \n                :\n                <View style={{display:'flex', justifyContent:'center', alignItems:'center', height:'100%'}}>\n                        <Text style={{fontSize:32, fontWeight:'700'}}>LOADING...</Text>\n                </View>\n            }\n        \n            {\n                data_arr && data_arr[ques] && data_arr[ques].Question.question_type_id == 3 ?\n                <Text style={{ marginTop:10,  fontSize:normalize(16), color: '#00a4de',fontStyle: 'italic'}}>Please select all that apply</Text>\n                :\n                <Text style={{ marginTop:10,  fontSize:normalize(16), color: '#00a4de',fontStyle: 'italic'}}>Please select any one</Text>\n            }\n            \n            \n            {\n                data_arr && data_arr[ques] && data_arr[ques].AnswerList ? \n                <ScrollView showsVerticalScrollIndicator={false} showsHorizontalScrollIndicator={false}>\n                {data_arr[ques].AnswerList.map((ele,val) => {\n                    if(data_arr[ques].Question.question_type_id == 2){\n                        return (\n                        <View key={val}>\n                            <TouchableOpacity  key={ele.answer_code} onPress={() => handle_option_press(ele.profile_question_id, ele.answer_code, val)}>\n                                <View style={[styles.action, {backgroundColor: ele.is_answered ? '#378C3C' : '#ffffff'}]}>\n                                    <Text style={{ fontSize: normalize(15), color: ele.is_answered ? '#ffffff' : '#000000'}}>{ele.description}</Text>\n                                </View>\n                            </TouchableOpacity>\n                        </View>\n                        )\n                    }\n                    else{\n                        console.log(data_arr[ques].AnswerList[val])\n                        return (\n                            <View key={val}>\n                                <TouchableOpacity key={ele.answer_code} onPress={() => {\n                                    // console.log(ele.answer_code)\n                                    // let flag = false;\n                                    // for(let i=0;i<ans_selected.length;i++){\n                                    //     if(ans_selected[i] == ele.answer_code){\n                                    //         ans_selected[i] = null;\n                                    //         flag = true\n                                    //     }\n                                    // }\n                                    // if(flag == false){\n                                    //     ans_selected.push(ele.answer_code)\n                                    // }\n                                    // console.log(ans_selected)\n                                    handle_multiple_select(ele.profile_question_id, ele.answer_code, val)}}>\n                                    <View style={[styles.action, {backgroundColor: ele.is_answered ? '#378C3C' : '#ffffff'}]}>\n                                        <Text style={{ fontSize: normalize(15), color: ele.is_answered ? '#ffffff' : '#000000'}}>{ele.description}</Text>\n                                    </View>\n                                </TouchableOpacity>\n                            </View>\n                        )\n                    }\n                })}</ScrollView> : <Text>Loading</Text>\n            }\n\n            \n            {\n                ques == 0 ? \n                <></>\n                :\n                data_arr && data_arr[ques] && data_arr[ques].Question.question_type_id == 2 ? \n                <View style={[styles.button, {display: 'flex', flexDirection: 'row', justifyContent: \"center\"}]}>\n                    <TouchableOpacity style={[styles.signIn, {backgroundColor: '#8C6E63', borderRadius: 40, marginRight: 10}]} onPress={() => back_question()}>\n                        <Text style={[styles.textSign, {\n                            color: '#fff'\n                        }]}>Back</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={[styles.signIn, {backgroundColor: '#378C3C', borderRadius:40, marginLeft: 10 }]} onPress={() => {let ret = move_to_next() \n                        // if(!ret){alert(\"Please select one of the above\")}\n                    }}>\n                        <Text style={[styles.textSign, {\n                            color: '#fff'\n                        }]}>Next</Text>\n                    </TouchableOpacity>\n                </View> \n                :\n                <View style={[styles.button, {display: 'flex', flexDirection: 'row', justifyContent: \"center\"}]}>\n                    <TouchableOpacity style={[styles.signIn, {backgroundColor: '#8C6E63',borderRadius: 40, marginRight: 10}]} onPress={() => back_question()}>\n                        <Text style={[styles.textSign, {\n                            color: '#fff'\n                        }]}>Back</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={[styles.signIn, {backgroundColor: '#378C3C',borderRadius: 40, marginLeft: 10}]} onPress={() => next_question(ques)}>\n                        <Text style={[styles.textSign, {\n                            color: '#fff'\n                        }]}>Next</Text>\n                    </TouchableOpacity>\n                </View>\n            }\n            </Animatable.View>\n        </View>\n        );\n    }\n  }\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1, \n        backgroundColor: '#FAFAFA',\n        flexDirection:'row',\n        // alignItems:'center',\n        justifyContent:'center',\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        marginTop: 20,\n    },\n    stretch: {\n        // width: SCREEN_WIDTH*0.5,\n        // height: SCREEN_WIDTH*0.5,\n        width: SCREEN_WIDTH > SCREEN_HEIGHT ? SCREEN_HEIGHT * 0.4 : SCREEN_WIDTH * 0.4,\n        textAlign: 'center',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    header: {\n        flex: 1,\n        justifyContent: 'flex-end',\n        paddingHorizontal: 20,\n        paddingBottom: 50\n    },\n    footer: {\n        flex: 1,\n        backgroundColor: 'rgb(235 235 235)',\n        borderTopLeftRadius: 30,\n        borderTopRightRadius: 30,\n        paddingHorizontal: 20,\n        paddingVertical: 30,\n        paddingBottom: 80,\n    },\n    text_header: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 30\n    },\n    text_footer: {\n        color: '#05375a',\n        fontSize: 18\n    },\n    action: {\n        padding: normalize(6),\n        marginTop: normalize(10),\n        minHeight: normalize(40),\n        maxHeight: 80,\n        flexDirection:'row',\n        alignItems:'center',\n        borderRadius: normalize(10),\n        borderWidth: 1,\n        borderColor: \"#8d8d8d\"\n    },\n    actionError: {\n        flexDirection: 'row',\n        marginTop: 10,\n        borderBottomColor: '#FF0000',\n        paddingBottom: 5\n    },\n    textInput: {\n        height: normalize(20),\n        flex: 1,\n        paddingLeft: 10,\n        color: '#05375a',\n    },\n    errorMsg: {\n        color: '#FF0000',\n        fontSize: 14,\n    },\n    button: {\n        position: 'absolute',\n        alignItems: 'center',\n        // bottom: 20,\n        flex: 1,\n        justifyContent: 'flex-end',\n        bottom: SCREEN_WIDTH*0.03,\n        width: SCREEN_WIDTH*0.3,\n        marginLeft: SCREEN_WIDTH*0.35,\n        marginRight: SCREEN_WIDTH*0.35,\n    },\n    signIn: {\n        width: '100%',\n        height: 50,\n        justifyContent: 'center',\n        alignSelf: 'center',\n        borderRadius: 10\n    },\n    textSign: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module"}