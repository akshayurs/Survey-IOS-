{"ast":null,"code":"import React, { useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SCREEN_WIDTH = _Dimensions$get.width,\n    SCREEN_HEIGHT = _Dimensions$get.height;\n\nvar scale = SCREEN_WIDTH / 320;\nconsole.log(SCREEN_HEIGHT);\nconsole.log(SCREEN_WIDTH);\nexport function normalize(size) {\n  var newSize = size * scale;\n\n  if (Platform.OS === 'ios') {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize));\n  } else {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2;\n  }\n}\nvar spinValue = new Animated.Value(0);\n\nfunction TagLine() {\n  useEffect(function () {\n    var spin = spinValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '360deg']\n    });\n  });\n  return _jsx(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    children: _jsxs(View, {\n      style: {\n        width: 'fit-content'\n      },\n      children: [_jsxs(Text, {\n        style: {\n          color: '#000000',\n          marginTop: 10,\n          textAlign: \"center\",\n          fontSize: normalize(20)\n        },\n        children: [\"Welcome to \", _jsx(Text, {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"SurveyOptimus!\"\n        })]\n      }), _jsx(Text, {\n        style: {\n          textAlign: \"right\",\n          fontSize: normalize(15)\n        },\n        children: \"it's quick and easy\"\n      })]\n    })\n  });\n}\n\nexport default TagLine;","map":{"version":3,"names":["React","useEffect","Dimensions","get","SCREEN_WIDTH","width","SCREEN_HEIGHT","height","scale","console","log","normalize","size","newSize","Platform","OS","Math","round","PixelRatio","roundToNearestPixel","spinValue","Animated","Value","TagLine","spin","interpolate","inputRange","outputRange","alignItems","color","marginTop","textAlign","fontSize","fontWeight"],"sources":["C:/Users/dives/Downloads/Survey Optimus - Latest Code 240822 (1)/components/TagLine.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Platform, \n  PixelRatio,\n  Animated\n} from \"react-native\";\n\nvar {width: SCREEN_WIDTH, height: SCREEN_HEIGHT,} = Dimensions.get('window');\nconst scale = SCREEN_WIDTH / 320;\nconsole.log(SCREEN_HEIGHT)\nconsole.log(SCREEN_WIDTH)\nexport function normalize(size) {\n    const newSize = size * scale \n    if (Platform.OS === 'ios') {\n      return Math.round(PixelRatio.roundToNearestPixel(newSize))\n    } else {\n      return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2\n    }\n}\nconst spinValue = new Animated.Value(0);\nfunction TagLine() {\n\n  useEffect(() => {\n    const spin = spinValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '360deg'],\n    })\n  })\n\n  return (\n    <View style={{alignItems: \"center\"}}>\n      <View style={{width: 'fit-content'}}>\n        <Text style={{color: '#000000', marginTop:10, textAlign: \"center\", fontSize:normalize(20),}}>Welcome to <Text style={{fontWeight: 'bold'}}>SurveyOptimus!</Text></Text>\n        <Text style={{ textAlign: \"right\", fontSize:normalize(15),}}>it's quick and easy</Text>\n      </View>\n    </View>\n  )\n}\n\nexport default TagLine"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;;AAWA,sBAAoDC,UAAU,CAACC,GAAX,CAAe,QAAf,CAApD;AAAA,IAAYC,YAAZ,mBAAKC,KAAL;AAAA,IAAkCC,aAAlC,mBAA0BC,MAA1B;;AACA,IAAMC,KAAK,GAAGJ,YAAY,GAAG,GAA7B;AACAK,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACAG,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACA,OAAO,SAASO,SAAT,CAAmBC,IAAnB,EAAyB;EAC5B,IAAMC,OAAO,GAAGD,IAAI,GAAGJ,KAAvB;;EACA,IAAIM,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;IACzB,OAAOC,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACC,mBAAX,CAA+BN,OAA/B,CAAX,CAAP;EACD,CAFD,MAEO;IACL,OAAOG,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACC,mBAAX,CAA+BN,OAA/B,CAAX,IAAsD,CAA7D;EACD;AACJ;AACD,IAAMO,SAAS,GAAG,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAlB;;AACA,SAASC,OAAT,GAAmB;EAEjBtB,SAAS,CAAC,YAAM;IACd,IAAMuB,IAAI,GAAGJ,SAAS,CAACK,WAAV,CAAsB;MACjCC,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADqB;MAEjCC,WAAW,EAAE,CAAC,MAAD,EAAS,QAAT;IAFoB,CAAtB,CAAb;EAID,CALQ,CAAT;EAOA,OACE,KAAC,IAAD;IAAM,KAAK,EAAE;MAACC,UAAU,EAAE;IAAb,CAAb;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAE;QAACvB,KAAK,EAAE;MAAR,CAAb;MAAA,WACE,MAAC,IAAD;QAAM,KAAK,EAAE;UAACwB,KAAK,EAAE,SAAR;UAAmBC,SAAS,EAAC,EAA7B;UAAiCC,SAAS,EAAE,QAA5C;UAAsDC,QAAQ,EAACrB,SAAS,CAAC,EAAD;QAAxE,CAAb;QAAA,0BAAwG,KAAC,IAAD;UAAM,KAAK,EAAE;YAACsB,UAAU,EAAE;UAAb,CAAb;UAAA;QAAA,EAAxG;MAAA,EADF,EAEE,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEF,SAAS,EAAE,OAAb;UAAsBC,QAAQ,EAACrB,SAAS,CAAC,EAAD;QAAxC,CAAb;QAAA;MAAA,EAFF;IAAA;EADF,EADF;AAQD;;AAED,eAAeY,OAAf"},"metadata":{},"sourceType":"module"}